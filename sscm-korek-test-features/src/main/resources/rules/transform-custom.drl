package com.ericsson.sscm.esb.rules;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import com.ericsson.sscm.esb.model.data.ActionType;
import com.ericsson.sscm.esb.model.data.Attribute;
import com.ericsson.sscm.esb.model.data.Request;
import com.ericsson.sscm.esb.constants.AirInternalConstants;

import java.util.Date;
import java.util.Calendar;
import java.util.Properties;

import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.google.gson.JsonElement;
import com.ericsson.sscm.esb.model.data.JsonUtil;
import com.ericsson.sscm.esb.model.data.AbstractInOut;
import com.ericsson.sscm.esb.constants.CommonConstants;
import com.ericsson.sscm.esb.model.data.Response;
import com.ericsson.sscm.esb.model.data.NodeResponse;
import com.ericsson.sscm.esb.model.data.Criteria;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import com.ericsson.sscm.esb.exceptions.*;

import java.math.BigInteger;

global org.slf4j.Logger logger;

rule "transform_updateServiceClass"
    when
        $request : Request( nextNodeIdentifier == "CustomKorekTestOutboundService",
                            nextOperation == "setSubscriberData" ,
                            isTransformed ( "CustomKorekTestOutboundService" ,"setSubscriberData" ) == false )
    then
        String fulfillReason = (String)$request.getNodeRequest().get("FULFILL_REASON");
        sc = $request.getNodeRequest().getAttributeByName("PARAM_1");
        String param1 = "";
        if (fulfillReason.equals("PROV")) {
            param1 = sc.getValue()+"prov";
        } else {
            param1 = sc.getValue()+"deprov";
        }
        $request.getNodeRequest().add("param1",param1);

        param2 = $request.getNodeRequest().getAttributeByName("PARAM_2");
        if (param2 != null) {
            $request.getNodeRequest().add("param2",param2.getValue());
        }
        logger.info("param1: "+param1);
end